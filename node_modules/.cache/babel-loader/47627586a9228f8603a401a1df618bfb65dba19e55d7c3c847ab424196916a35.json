{"ast":null,"code":"var _jsxFileName = \"/Users/valapalajyotheeswar/Documents/GIT/assesment/assessment/src/components/PointsTable.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { mockCustomerTransactions } from '../mockData/customerTransactions';\nimport { returnRewards } from '../utils/utils';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PointsTable() {\n  _s();\n  const [customerTransactions, setCustomerTransactions] = useState([]);\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    setCustomerTransactions(mockCustomerTransactions);\n  }, []);\n  useEffect(() => {\n    setRows(returnRewards(customerTransactions));\n  }, [customerTransactions]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Total Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"October\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"November\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"December\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows ? rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.totalPoints\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.october\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.november\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.december\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(PointsTable, \"wjyHA0F4NNjsJq8ANiQxHg1+PNY=\");\n_c = PointsTable;\nvar _c;\n$RefreshReg$(_c, \"PointsTable\");","map":{"version":3,"names":["React","useEffect","useState","mockCustomerTransactions","returnRewards","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","PointsTable","customerTransactions","setCustomerTransactions","rows","setRows","minWidth","map","row","border","name","totalPoints","october","november","december"],"sources":["/Users/valapalajyotheeswar/Documents/GIT/assesment/assessment/src/components/PointsTable.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { mockCustomerTransactions } from '../mockData/customerTransactions';\nimport { returnRewards } from '../utils/utils';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function PointsTable() {\n\n    const [customerTransactions, setCustomerTransactions] = useState([]);\n    const [rows,setRows] = useState([]);\n\n    useEffect(() => {\n        setCustomerTransactions(mockCustomerTransactions)\n    },[]);\n\n    useEffect(()=>{\n        setRows(returnRewards(customerTransactions));\n    },[customerTransactions])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Total Points</TableCell>\n            <TableCell align=\"right\">October&nbsp;</TableCell>\n            <TableCell align=\"right\">November&nbsp;</TableCell>\n            <TableCell align=\"right\">December&nbsp;</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows?rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.totalPoints}</TableCell>\n              <TableCell align=\"right\">{row.october}</TableCell>\n              <TableCell align=\"right\">{row.november}</TableCell>\n              <TableCell align=\"right\">{row.december}</TableCell>\n            </TableRow>\n          )):null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}